version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
    networks:
      - my-network
    depends_on:
      - postgres
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PASSWORD=null

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    networks:
      - my-network

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    container_name: admin
    ports:
      - "3001:3000"
    volumes:
      - ./admin:/app
    networks:
      - my-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html
      - ./admin/build:/usr/share/nginx/html
    depends_on:
      - backend
      - frontend
      - admin
    networks:
      - my-network

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_DB=drug
      - POSTGRES_USER=datn-user
      - POSTGRES_PASSWORD=12345678
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - my-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - my-network

volumes:
  postgres-data:

networks:
  my-network:
